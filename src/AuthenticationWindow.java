
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.io.*;

public class AuthenticationWindow extends javax.swing.JFrame {

    /*Making files and directories*/
    String workingDirectory = System.getProperty("user.dir");
    File dir = new File(workingDirectory + File.separator + "EncDiary Plus" + File.separator + "Config");
    File file = new File(dir + File.separator + "Do_Not_Modify.sys");
    /**
     * **************************
     */
    boolean status1, status2;
    String kStore;
    EncryptionDecryption ED = new EncryptionDecryption();
    boolean UnivFlag = false;

    public AuthenticationWindow() {
        initComponents();
        setIcon();
        pnlCreateUser.setVisible(false);
        pnlLogin.setVisible(false);
        lblHelp1.setVisible(false);
        lblHelp2.setVisible(false);
        lblForgetPassKey.setVisible(false);
        /*Setting up Welcome Page*/

        if (dir.isDirectory() && file.exists()) {
            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                String temp = br.readLine();
                if (temp == null) {
                    javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! Unable to retrieve PassKey.\nPassKey must be setup again to continue...");
                    pnlCreateUser.setVisible(true);
                    txtPassKey.requestFocus();
                } else {
                    //Displaying Login Window
                    pnlLogin.setVisible(true);
                    txtPassKey1.requestFocus();
                }
                br.close();
                fr.close();
            } catch (IOException ex) {
                javax.swing.JOptionPane.showInternalMessageDialog(null, ex.toString());
            }
        } else {
            //Creating new login file and directory
            boolean temp = createDirFile();
            if (temp == true) {
                pnlCreateUser.setVisible(true);
                txtPassKey.requestFocus();
            } else {
                javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! I'm unable to gather required data.");
            }
        }
        /*End of setting up AuthenticationWindow*/
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Img/IconPack/security_lock.png")));
    }
    
    private void setIconError() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Img/IconPack/error.png")));
    }

    private void setIconWarning() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Img/IconPack/warning.png")));
    }
    
    private boolean createDirFile() {
        //Creating directory and files
        try {
            boolean d = dir.mkdirs();
            boolean f = file.createNewFile();
            if (d || f) {
                javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Hey Welcome,\nThank you for choosing EncDiary Plus.\nYou may need to create a PassKey on next screen.\nPassKey helps you to secure your data.");
                return true;
            } else {
                javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! File system access denied.");
            }

        } catch (HeadlessException | IOException ex) {
            javax.swing.JOptionPane.showInternalMessageDialog(null, ex.toString());
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHead = new javax.swing.JLabel();
        Separator = new javax.swing.JSeparator();
        lblHappy = new javax.swing.JLabel();
        pnlCreateUser = new javax.swing.JPanel();
        lblPassKey = new javax.swing.JLabel();
        btnGo1 = new javax.swing.JButton();
        btnHelp1 = new javax.swing.JButton();
        lblCreateHead = new javax.swing.JLabel();
        lblCreateHead1 = new javax.swing.JLabel();
        lblHelp1 = new javax.swing.JLabel();
        txtPassKey = new javax.swing.JPasswordField();
        pnlLogin = new javax.swing.JPanel();
        lblPassKey1 = new javax.swing.JLabel();
        btnGo2 = new javax.swing.JButton();
        btnHelp2 = new javax.swing.JButton();
        lblHelp2 = new javax.swing.JLabel();
        lblForgetPassKey = new javax.swing.JLabel();
        txtPassKey1 = new javax.swing.JPasswordField();
        lblHelp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EncDiary Plus | Authentication");
        setAlwaysOnTop(true);
        setIconImages(null);
        setName(""); // NOI18N
        setResizable(false);

        lblHead.setFont(new java.awt.Font("Trebuchet MS", 1, 25)); // NOI18N
        lblHead.setForeground(new java.awt.Color(153, 0, 153));
        lblHead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHead.setText("EncDiary Plus");
        lblHead.setFocusable(false);
        lblHead.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHead.setName(""); // NOI18N

        Separator.setForeground(new java.awt.Color(0, 0, 0));

        lblHappy.setForeground(new java.awt.Color(255, 157, 124));
        lblHappy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHappy.setText("Encrypt | A Secure Personal Diary | Decrypt"); // NOI18N
        lblHappy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHappy.setName(""); // NOI18N

        pnlCreateUser.setBackground(new java.awt.Color(153, 204, 255));
        pnlCreateUser.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 0)));
        pnlCreateUser.setEnabled(false);

        lblPassKey.setFont(new java.awt.Font("Segoe UI Light", 1, 13)); // NOI18N
        lblPassKey.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPassKey.setText("Create PassKey");
        lblPassKey.setFocusable(false);
        lblPassKey.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnGo1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        btnGo1.setForeground(new java.awt.Color(153, 153, 0));
        btnGo1.setText("Go");
        btnGo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGo1.setFocusPainted(false);
        btnGo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGo1ActionPerformed(evt);
            }
        });

        btnHelp1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        btnHelp1.setForeground(new java.awt.Color(153, 153, 0));
        btnHelp1.setText("Help");
        btnHelp1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHelp1.setFocusPainted(false);
        btnHelp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelp1ActionPerformed(evt);
            }
        });

        lblCreateHead.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblCreateHead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateHead.setText("Start Encrypting Your World Now");
        lblCreateHead.setFocusable(false);
        lblCreateHead.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCreateHead1.setFont(new java.awt.Font("Kristen ITC", 0, 10)); // NOI18N
        lblCreateHead1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateHead1.setText("YOU NEED TO CREATE A PASSKEY TO CONTINUE");
        lblCreateHead1.setFocusable(false);
        lblCreateHead1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblHelp1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lblHelp1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHelp1.setText("<html>\n<p><b color=\"RED\">Note:</b> PassKey must be atleast of 5 digit/character long.</p>\n<html>");

        txtPassKey.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        txtPassKey.setForeground(new java.awt.Color(102, 102, 0));
        txtPassKey.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPassKey.setToolTipText("PassKey Area");
        txtPassKey.setAutoscrolls(false);
        txtPassKey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPassKeyKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlCreateUserLayout = new javax.swing.GroupLayout(pnlCreateUser);
        pnlCreateUser.setLayout(pnlCreateUserLayout);
        pnlCreateUserLayout.setHorizontalGroup(
            pnlCreateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCreateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreateHead1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCreateHead, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPassKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHelp1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCreateUserLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlCreateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtPassKey)
                    .addGroup(pnlCreateUserLayout.createSequentialGroup()
                        .addComponent(btnGo1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHelp1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(136, 136, 136))
        );
        pnlCreateUserLayout.setVerticalGroup(
            pnlCreateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateUserLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblCreateHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCreateHead1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(lblPassKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17)
                .addComponent(txtPassKey)
                .addGap(14, 14, 14)
                .addGroup(pnlCreateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHelp1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHelp1)
                .addContainerGap())
        );

        pnlLogin.setBackground(new java.awt.Color(140, 182, 178));
        pnlLogin.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 0)));

        lblPassKey1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblPassKey1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPassKey1.setText("Enter PassKey");
        lblPassKey1.setFocusable(false);
        lblPassKey1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnGo2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        btnGo2.setForeground(new java.awt.Color(153, 153, 0));
        btnGo2.setText("Go");
        btnGo2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGo2.setFocusPainted(false);
        btnGo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGo2ActionPerformed(evt);
            }
        });

        btnHelp2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        btnHelp2.setForeground(new java.awt.Color(153, 153, 0));
        btnHelp2.setText("Help");
        btnHelp2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHelp2.setFocusPainted(false);
        btnHelp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelp2ActionPerformed(evt);
            }
        });

        lblHelp2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lblHelp2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHelp2.setText("<html>\n<p><b color=\"RED\">Note:</b> PassKey must be atleast of 5 digit/character long.</p>\n<html>");

        lblForgetPassKey.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblForgetPassKey.setForeground(new java.awt.Color(0, 0, 255));
        lblForgetPassKey.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblForgetPassKey.setText("Forget PassKey");
        lblForgetPassKey.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblForgetPassKey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblForgetPassKeyMouseClicked(evt);
            }
        });

        txtPassKey1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        txtPassKey1.setForeground(new java.awt.Color(102, 102, 0));
        txtPassKey1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPassKey1.setToolTipText("PassKey Area");
        txtPassKey1.setAutoscrolls(false);
        txtPassKey1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKey1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPassKey1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHelp2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPassKey1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblForgetPassKey, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPassKey1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                        .addComponent(btnGo2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHelp2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblPassKey1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPassKey1)
                .addGap(18, 18, 18)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHelp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addComponent(lblForgetPassKey)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHelp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lblHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/help.png"))); // NOI18N
        lblHelp.setToolTipText("Help/About");
        lblHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHelp.setMaximumSize(new java.awt.Dimension(16, 20));
        lblHelp.setPreferredSize(new java.awt.Dimension(16, 20));
        lblHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHelpMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Separator)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblHappy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHead, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(pnlCreateUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHead)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHappy))
                    .addComponent(lblHelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCreateUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblHappy.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHelp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelp1ActionPerformed
        status1 = !status1;
        if (status1) {
            lblHelp1.setVisible(true);
        } else {
            lblHelp1.setVisible(false);
        }
    }//GEN-LAST:event_btnHelp1ActionPerformed

    private void btnHelp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelp2ActionPerformed
        status2 = !status2;
        if (status2) {
            lblHelp2.setVisible(true);
            lblForgetPassKey.setVisible(true);
        } else {
            lblHelp2.setVisible(false);
            lblForgetPassKey.setVisible(false);
        }
    }//GEN-LAST:event_btnHelp2ActionPerformed

    private void btnGo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGo1ActionPerformed
        String temp = null, tKey = txtPassKey.getText();
        if (tKey.length() >= 5 && tKey.trim().length() >= 5) {
            try {
                pnlCreateUser.setVisible(false);
                temp = javax.swing.JOptionPane.showInternalInputDialog(rootPane, "", "Verify PassKey", 3);
                if (tKey.matches(temp) && temp != null) {
                    try {
                        FileWriter fw = new FileWriter(file);
                        BufferedWriter bw = new BufferedWriter(fw);
                        kStore = ("PassKey: $#" + txtPassKey.getText() + "#$");
                        bw.write(ED.encryptFile(kStore));
                        bw.close();
                        fw.close();
                        pnlCreateUser.setVisible(false);
                        javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Great! Your PassKey has been successfully stored.\nUse this PassKey to login next time.");
                        UnivFlag = true;
                        pnlLogin.setVisible(true);
                        txtPassKey1.requestFocus();

                    } catch (IOException e) {
                        pnlCreateUser.setVisible(false);
                        javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "File system access denied.\n" + e.toString(), "Error", 0);
                        pnlCreateUser.setVisible(true);
                    }
                } else {
                    pnlCreateUser.setVisible(false);
                    javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! PassKey doesn't match. Try again...", "PassKey", 2);
                    pnlCreateUser.setVisible(true);
                    txtPassKey.requestFocus();
                }
            } catch (NullPointerException e) {
                pnlCreateUser.setVisible(true);
                txtPassKey.requestFocus();
            } catch (Exception e) {
                pnlCreateUser.setVisible(false);
                javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Exception occured!\n" + e.toString(), "PassKey", 2);
                pnlCreateUser.setVisible(true);
            }
        } else {
            pnlCreateUser.setVisible(false);
            javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! PassKey must contain atleast 5 character.", "PassKey", 2);
            txtPassKey.setText(tKey.trim());
            pnlCreateUser.setVisible(true);
            txtPassKey.requestFocus();
        }
    }//GEN-LAST:event_btnGo1ActionPerformed

    private void btnGo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGo2ActionPerformed
        String temp, verify;
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            temp = br.readLine();
            if (temp == null) {
                pnlLogin.setVisible(false);
                javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! Unbale to fetch required files or data.\nApplication or system files have been modified or deleted.\nApplication need some information to setup basic functionality.");
                lblCreateHead.setText("PassKey Re-Setup");
                pnlCreateUser.setVisible(true);
                txtPassKey.requestFocus();
            } else {
                br.close();
                temp = ED.decryptFile(temp);  //Decrypting Key
                try {
                    verify = temp.substring(temp.indexOf("$#") + 2, temp.indexOf("#$"));
                    if (txtPassKey1.getText().length() >= 4) {
                        if (verify.matches(txtPassKey1.getText())) {
                            dispose();
                            if (UnivFlag == true) {
                                javax.swing.JOptionPane.showMessageDialog(null, "Hello! You need a MasterKey to operate EncDiary environment.\nPlease note that your FTP username is your MasterKey.\nIf you do not have key then you must acquire key from developer.", "Important Information", 1);
                            }
                            EncDiaryHome Home = new EncDiaryHome();
                            Home.setVisible(true);
                        } else {
                            pnlLogin.setVisible(false);
                            javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! You've entered an invalid PassKey.");
                            pnlLogin.setVisible(true);
                            txtPassKey1.requestFocus();
                        }
                    } else {
                        pnlLogin.setVisible(false);
                        javax.swing.JOptionPane.showInternalMessageDialog(rootPane, "Oops! PassKey must contain atleast 5 character.");
                        pnlLogin.setVisible(true);
                        txtPassKey1.requestFocus();
                    }
                } catch (StringIndexOutOfBoundsException ex) {
                    setIconError();
                    br.close();
                    file.delete();
                    dispose();
                    javax.swing.JOptionPane.showMessageDialog(null, "Application has been modified.\nResetting application for you.\nPlease re-run EncDiary.", "Error", 0);
                    System.exit(0);
                }
            }
            br.close();
            fr.close();
        } catch (Exception e) {
            setIconWarning();
            pnlLogin.setVisible(false);
            int res=javax.swing.JOptionPane.showConfirmDialog(rootPane, "Unexpected error occured!\nMost of these type of issues can be solved by restarting application.\nDo you wish to restart appliaction[Press 'No' if restarting option not work for you]?","Critical Error",0,0);
            if(res==0)
            {
                System.exit(0);
            }
            else
            {
                file.delete();
                dispose();
                SplashScreen S=new SplashScreen();
                S.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnGo2ActionPerformed

    private void lblForgetPassKeyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblForgetPassKeyMouseClicked
        ForgetPassKey();
    }//GEN-LAST:event_lblForgetPassKeyMouseClicked

    private void ForgetPassKey()
    {
        int res=javax.swing.JOptionPane.showConfirmDialog(rootPane, "You need to authenticate yourself by entering MasterKey[FTP Username].\nIf you do not have MasterKey yet, acquire it from developer first to use this option.\nDo you wish to reset EncDiary?", "PassKey Reset", 0);
        if (res == 0) {

            /*Validating MasterKey*/
            File TempDir = new File(workingDirectory + File.separator + "EncDiary Plus" + File.separator + "Config");
            File TempFile = new File(TempDir + File.separator + "FTP_Config.sys");
            String MKeyInput = "", MKeyFile = "epiz_20999466";
            if (TempDir.isDirectory() && TempFile.isFile()) {
                try {
                    FileReader fr = new FileReader(TempFile);
                    BufferedReader br = new BufferedReader(fr);
                    String temp = br.readLine();
                    br.close();
                    fr.close();
                    if (temp != null) {
                        temp = ED.decryptFile(temp);
                        MKeyFile = temp.substring(temp.indexOf("<U>") + 3, temp.indexOf("</U>"));
                    }
                } catch (Exception ex) {
                    javax.swing.JOptionPane.showMessageDialog(rootPane, ex.toString());
                    System.exit(0);
                }
            }
            try {
                MKeyInput = javax.swing.JOptionPane.showInputDialog(rootPane, "Enter MasterKey[FTP Username] for authentication.", "MasterKey Authentication", 3);
                if (MKeyInput.matches("epiz_20999466") || MKeyFile.matches(MKeyInput)) {
                    /**
                     * *******FILE DELETION CODE*********
                     */
                    boolean temp = file.delete();
                    if (temp == true) {
                        javax.swing.JOptionPane.showMessageDialog(rootPane, "PassKey reset successful!\nRe-run the EncDiary to create new PassKey.", "EncDiary Plus", 1);
                        System.exit(0);
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(rootPane, "Oops! Unable to process your PassKey resetting option currently.\nTry again later.", "EncDiary Plus", 2);
                    }
                    /**
                     * **********************************
                     */
                } else {
                    javax.swing.JOptionPane.showMessageDialog(rootPane, "Oops! Invalid MasterKey detected.\nTry again with valid MasterKey.", "Authentication Failed", 0);
                }
            } catch (NullPointerException ex) {
                javax.swing.JOptionPane.showMessageDialog(rootPane, "Sorry! MasterKey authentication is compulsory to reset PassKey.", "Authentication Failed", 0);
            }
            /*End of Validation*/
        }
    }
    
    private void txtPassKeyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyKeyPressed
        if (evt.getKeyCode() == 10) {
            btnGo1.doClick();
        }
    }//GEN-LAST:event_txtPassKeyKeyPressed

    private void txtPassKey1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKey1KeyPressed
        if (evt.getKeyCode() == 10) {
            btnGo2.doClick();
        }
    }//GEN-LAST:event_txtPassKey1KeyPressed

    private void lblHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHelpMouseClicked
        dispose();
        EncHelp Help = new EncHelp("AuthenticationWindow");
        Help.setVisible(true);
    }//GEN-LAST:event_lblHelpMouseClicked

    private void txtPassKey1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKey1KeyTyped
        int txtLen = txtPassKey1.getText().length();
        if (txtLen > 11) {
            this.setAlwaysOnTop(false);
            javax.swing.JOptionPane.showMessageDialog(null, "PassKey reached to maximum allowed length.\nMaximum PassKey allowed character length: 12", "Alert", 2);
            evt.consume();
            this.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_txtPassKey1KeyTyped

    private void txtPassKeyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyKeyTyped
        int txtLen = txtPassKey.getText().length();
        if (txtLen > 11) {
            this.setAlwaysOnTop(false);
            javax.swing.JOptionPane.showMessageDialog(null, "PassKey reached to maximum allowed length.\nMaximum PassKey allowed character length: 12", "Alert", 2);
            evt.consume();
            this.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_txtPassKeyKeyTyped

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuthenticationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuthenticationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuthenticationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthenticationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuthenticationWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator Separator;
    private javax.swing.JButton btnGo1;
    private javax.swing.JButton btnGo2;
    private javax.swing.JButton btnHelp1;
    private javax.swing.JButton btnHelp2;
    private javax.swing.JLabel lblCreateHead;
    private javax.swing.JLabel lblCreateHead1;
    private javax.swing.JLabel lblForgetPassKey;
    private javax.swing.JLabel lblHappy;
    private javax.swing.JLabel lblHead;
    private javax.swing.JLabel lblHelp;
    private javax.swing.JLabel lblHelp1;
    private javax.swing.JLabel lblHelp2;
    private javax.swing.JLabel lblPassKey;
    private javax.swing.JLabel lblPassKey1;
    private javax.swing.JPanel pnlCreateUser;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPasswordField txtPassKey;
    private javax.swing.JPasswordField txtPassKey1;
    // End of variables declaration//GEN-END:variables
}
